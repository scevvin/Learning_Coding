# things to do:
# character array to store all character options.
# character name array.
# character inventory array.
# prologue
# field - when character goes to and from cabin/cave etc.
# cabin options array.
# cave options array.
# ancient book item

import random
import time


def print_pause(msg_to_print):
    print(msg_to_print)
    time.sleep(2)


def play_game():
    name = []
    inventory = []
    inventory_choices = random.choice(["rusty knife", "cracked bow", "empty canteen", "dwindling torch"])
    cabin_figure = random.choice(["black hooded figure", "pale, scrawny figure with red eyes", "a transparent, black cloud with purple eyes"])
    cave_figure = random.choice(["angelic figure with white robes", "three young children dressed in white and gold silk", "an old man"])
    inventory.append(inventory_choices)
    start(name, inventory, cabin_figure, cave_figure)


def start(name, inventory, cabin_figure, cave_figure):
    name_ask = input("Hello, Adventurer! What is your name?\n")
    print_pause(f"You typed {name_ask}. Is that ok?")
    time.sleep(1)
    name_check = input("Please type yes to continue or no to change\n")
    if name_check.lower() == "yes":
        name.append(name_ask)
        field_prologue(name, inventory, cabin_figure, cave_figure)
    if name_check.lower() == "no":
        name_change(name, inventory, cabin_figure, cave_figure)
    else:
        print("Sorry, I didn't understand that.")
        return start(name, inventory, cabin_figure, cave_figure)


def name_change(name, inventory, cabin_figure, cave_figure):
    change = input("Please type in what you'd like your name to be\n")
    print_pause(f"You typed {change}. Is that ok?")
    name_check = input("Please type yes to continue or no to change\n")
    if name_check.lower() == "yes":
        name.clear()
        name.append(change)
        field_prologue(name, inventory, cabin_figure, cave_figure)
    if name_check.lower() == "no":
        return name_change(name, inventory, cabin_figure, cave_figure)


# The first field option only!
def field_prologue(name, inventory, cabin_figure, cave_figure):
    print_pause("You come across a wide field, the swaying grass illuminated by the bright, full moon above.")
    print_pause(f"You look at your {inventory[0]} and wonder what else you can find here.")
    print_pause("As you scan the field, you notice a cabin to the left and a cave to the right.")
    print_pause("The cabin is lit up with smoke coming out of the chimney.")
    print_pause("Scanning right, the field turns into rolling hills.")
    print_pause("At the base of these hills, you see what looks like the top of a cave entrance.")
    print_pause("The breeze you watched sweep across the field passes you.")
    print_pause("Piercing inside, down to your bones.")
    print_pause(f"With a shiver, you look at your {inventory[0]}.")
    print_pause("'I'd better make a decision, quickly,' you think to your self.")
    print_pause("What do you choose to investigate first?")
    field_choice(name, inventory, cabin_figure, cave_figure)


# Only after the user has gone through cabin or cave choices
def field_again(name, inventory, cabin_figure, cave_figure):
    print_pause("Coming back to the field, the cold overwhelms you.")
    print_pause("Which reminds you, you better choose fast.")
    print_pause("What do you choose to do?")
    field_choice(name, inventory, cabin_figure, cave_figure)


# The choice of cabin or cave is stored here.
def field_choice(name, inventory, cabin_figure, cave_figure):
    direction = input("Please type cabin or cave\n")
    if direction.lower() == "cave":
        print_pause("Though it doesn't seem logical, something draws you to the cave.")
        cave(name, inventory, cabin_figure, cave_figure)
    if direction.lower() == "cabin":
        print_pause("The warm and inviting nature of the cabin is hard to pass up.")
        cabin(name, inventory, cabin_figure, cave_figure)


# -----------------------------------------------CABIN SEQUENCE-----------------------------------------------
def cabin(name, inventory, cabin_figure, cave_figure):
    if "Ancient Book" in inventory:
        print_pause("As you get closer to the cabin,")
        print_pause("The smell of a home-cooked meal fills your nostrils.")
        print_pause("The heat from the fire insidefills your soul. ")
        print_pause("'Finally, I'm home. After all these years of wondering,' you think to yourself")
        cabin_choice(name, inventory, cabin_figure, cave_figure)
    if "Ancient Book" not in inventory:
        print_pause("Getting closer to the cabin, you can't help but feel uneasy.")
        print_pause(f"You look at your {inventory} with unsurity.")
        print_pause("Though the warmth from the cabin pulls you in,")
        print_pause("You can't help but wonder if this is the right choice?")
        cabin_choice(name, inventory, cabin_figure, cave_figure)


# choice to knock or leave to field_choice
def cabin_choice(name, inventory, cabin_figure, cave_figure):
    print_pause("Walking up the steps to the cabin, you have one more choice left.")
    print_pause("Do you knock on the door? Or leave to see if there's more to explore?")
    cabin_choice = input("Please type knock to enter the cabin or leave to explore more\n")
    if cabin_choice.lower() == "knock":
        cabin_knock(name, inventory, cabin_figure, cave_figure)
    if cabin_choice.lower() == "leave":
        field_again(name, inventory, cabin_figure, cave_figure)


# both outcomes of knocking on cabin
def cabin_knock(name, inventory, cabin_figure, cave_figure):
    if "Ancient Book" in inventory:
        print_pause("You knock on the cabin, you won?")
        play_again()
    if "Ancient Book" not in inventory:
        print_pause(f"A scary {cabin_figure} flies out at you and you die!")
        print("Woops you died.")
        play_again()


# -----------------------------------------------CAVE SEQUENCE-----------------------------------------------
# cave choice to enter or leave
# cave entrace
def cave(name, inventory, cabin_figure, cave_figure):
    if "Ancient Book" in inventory:
        print_pause("Walking closer to the cave you entered in before,")
        print_pause("You see the same glimmering lights coming from within.")
        print_pause("'Is there more for me to find,' you wonder as you approach the entrance.")
        cave_choice(name, inventory, cabin_figure, cave_figure)
    if "Ancient Book" not in inventory:
        print_pause(f"Shivering, holding your {inventory[0]} tightly,")
        print_pause("You come up to the entrance of a cave you saw earlier.")
        print_pause("As you study the entrance, you notice flickering lights coming from deep inside.")
        print_pause("A breeze of warm air suddenly hits you")
        print_pause("And a soft, deep voice fills your mind.")
        print_pause("'Come in,' it says.")
        cave_choice(name, inventory, cabin_figure, cave_figure)


def cave_choice(name, inventory, cabin_figure, cave_figure):
    print_pause("Do you enter the cave?")
    cabin_choice = input("Please type 'enter' to enter the cave or 'leave' to explore more\n")
    if cabin_choice.lower() == "enter":
        cave_enter(name, inventory, cabin_figure, cave_figure)
    if cabin_choice.lower() == "leave":
        field_again(name, inventory, cabin_figure, cave_figure)


# enter the cave or leave
def cave_enter(name, inventory, cabin_figure, cave_figure):
    if "Ancient Book" in inventory:
        print_pause("The memories of what you experience here flood your mind.")
        print_pause("However, you feel as though there is nothing left for you here.")
        field_again(name, inventory, cabin_figure, cave_figure)
    if "Ancient Book" not in inventory:
        print_pause(f"You are greeted by {cave_figure } who hands you an Ancient Book!")
        print_pause("Congratulations, you found the Ancient Book!")
        inventory.clear()
        inventory.append("Ancient Book")
        field_again(name, inventory, cabin_figure, cave_figure)


def play_again():
    again = input("Would you like to play again? Please type yes or no\n")
    if again.lower() == "yes":
        print_pause("Restarting your adventure!")
        print_pause("3")
        print_pause("2")
        print_pause("1")
        play_game()
    if again.lower() == "no":
        print_pause("Thank you for playing!")
        exit()


play_game()
